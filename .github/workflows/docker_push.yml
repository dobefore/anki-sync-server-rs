# from https://github.com/docker/build-push-action
name: builddocker

on:
  push:
    branches: master
    tags:
      - "*.*.*"

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      # clone and patch anki library  
      - name: Clone patch Anki
        run: sh ./scripts/clone_patch_anki
        
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.9.1'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} 
      
      - run: mv target/${{ matrix.target }}/release/ankisyncd ${{ matrix.target }}-ankisyncd
      
      - uses: actions/upload-artifact@v2
        with:
          name: binary
          path: ${{ matrix.target }}-ankisyncd
          retention-days: 1

  docker:
    needs: buildx
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ankicommunity/anki-sync-server-rs
          # generate Docker tags based on the following events/attributes
          tags: |
            latest
            type=semver,pattern={{version}}
           

       # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: binary
          path: binary

      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .github/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
